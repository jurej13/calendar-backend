{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.b89d4aad.chunk.js","sourcesContent":["export const types = {\r\n    //tipos dela ui, para abrir y cerrar el modal.\r\n    uiOpenModal : '[ui] Open modal',\r\n    uiCloseModal : '[ui] Close modal',\r\n    //eventos\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout : '[event] Logout event',\r\n    eventStartAddNew : '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    //para limpiar el active note\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    //Auth para el logeo con la bd\r\n    authCheckingFinish : '[auth] Finish Cheking login state',\r\n    authStartLogin : '[auth] Start login',\r\n    authLogin : '[auth] Login',\r\n    authStartRegister : '[auth] Start Register',\r\n    authStartTokenRenew : '[auth] Start token renew',\r\n    authLogout : '[auth] Logout',\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n    checking : true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\nexport const authReducer = (state = initialState, action)=> {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n            \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños mio',\r\n//     start: moment().toDate(), //sinonimo de new Date \r\n//     end : moment().add(2,'hours').toDate(), //es obligatorio poner el inicio y el fin.\r\n//     bgcolor:'#fafafa',\r\n//     notes:'comprar la caca',\r\n//     user:{\r\n//         _id:'123',\r\n//         name:'Javier'\r\n//     }\r\n// }\r\n\r\n\r\nconst initialState={\r\n    events: [\r\n        \r\n    ],\r\n    activeEvent:null//todas las propiedades del objeto\r\n}\r\nexport const calendarReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent:null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n    const initialState = {\r\n        modalOpen: false\r\n    }\r\n\r\n\r\n\r\nexport const uiReducer = (state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n        return{\r\n            ...state,\r\n            modalOpen: false\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n    \r\n    ","\r\nimport {createStore,compose,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\r\nexport const store=createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\n","const baseUrl=process.env.REACT_APP_API_URL\r\n\r\n//endpoint al que quiero llamar, /events\r\nexport const fetchSinToken= ( endpoint, data, method = 'GET' ) => {\r\n    const url= `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\nexport const fetchConToken= ( endpoint, data, method = 'GET' ) => {\r\n    const url= `${baseUrl}/${endpoint}`; //localhost:4000/api/login\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}","import moment from 'moment'\r\n\r\n\r\nexport const prepareEvents = (events= []) => {\r\n    \r\n    return events.map(\r\n        (e)=> ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch,getState)=> {\r\n        const {uid,name} = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events',event,'POST')\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id:uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventAddNew = (event) =>({\r\n    type: types.eventAddNew,\r\n    payload:event\r\n})\r\nexport const eventSetActive = (event) =>({\r\n    type: types.eventSetActive,\r\n    payload:event\r\n})\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\nexport const eventStartUpdate= (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT')\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n const eventUpdated = ( event ) =>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch,getState)=> {\r\n        \r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`,{},'delete')\r\n            const body = await resp.json()\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\nexport const eventStartLoading = () =>{\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events')\r\n            const body = await resp.json()\r\n            const events =prepareEvents(body.eventos)\r\n            \r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email,password) => {\r\n    return async(dispatch)=>{\r\n        const resp = await fetchSinToken( 'auth', {email,password},'POST');\r\n        const body = await resp.json();\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            //Como el token dura 2 horas, esto es para saber la hora en la que lo creo.\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error')\r\n        }\r\n    }\r\n}\r\nexport const startRegister =  (email,password,name) => {\r\n    return async(dispatch)=> {\r\n        const resp = await fetchSinToken('auth/new',{email,password,name},'POST')\r\n        const body= await resp.json()\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            //Como el token dura 2 horas, esto es para saber la hora en la que lo creo.\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error')\r\n        }\r\n    }\r\n}\r\nexport const startChecking = () => {\r\n    return async (dispatch)=> {\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body= await resp.json()\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token)\r\n            //Como el token dura 2 horas, esto es para saber la hora en la que lo creo.\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            \r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\nconst checkingFinish = () =>({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout())\r\n    }\r\n}\r\nconst logout = () => ({type:types.authLogout})","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState= {}) => {\r\n    const [values, setValues]=useState(initialState)\r\n    const reset = () => {\r\n        setValues( initialState )\r\n    }\r\n    const handleInputChange=({target})=>{\r\n        setValues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n    return [values,handleInputChange,reset]\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin,startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch= useDispatch()\r\n    const [formLoginValues,handleLoginInputChange] = useForm({\r\n        lEmail: 'javier@pito.com',\r\n        lPassword: '123456'\r\n    })\r\n    const [formRegisterValues,handleRegisterInputChange] = useForm({\r\n        rName:'jurito',\r\n        rEmail: 'jurito@pito.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    })\r\n    const {lEmail,lPassword} = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(startLogin(lEmail,lPassword))\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        if(rPassword1!== rPassword2){\r\n            return Swal.fire('Error','Las contraseñas tiene que ser iguales.','error')\r\n        }\r\n        console.log('?')\r\n        dispatch(startRegister(rEmail,rPassword1,rName))\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                           />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth)\r\n    const handleLogout = () => {\r\n        dispatch( startLogout());\r\n    }\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                {name}\r\n            </span>\r\n            <button \r\n                className='btn btn-outline-danger'\r\n                onClick= { handleLogout }    \r\n            >\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span> Salir</span> \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal    \r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal    \r\n})","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdate} from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n  Modal.setAppElement('#root');\r\n\r\n  const now= moment().minutes(0).seconds(0).add(1,'hours');\r\n  const nowPlus1=now.clone().add(1,'hours')\r\n//nowPlus1 es una hora mas que el now\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end:nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const {modalOpen}= useSelector(state => state.ui)\r\n    const { activeEvent}= useSelector(state => state.calendar)\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate())\r\n    const [titleValid,setTitleValid]=useState(true)\r\n    const dispatch = useDispatch()\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n\r\n    const {notes,title,start,end} = formValues\r\n\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    } \r\n\r\n    const closeModal = () => {\r\n        //TODO: cerrar el modal.\r\n        console.log('cerrar modal')\r\n        //dispatch\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues( initEvent )\r\n    }\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e)\r\n        setFormValues({//esto se hace porque necesito actualizarla fecha cuando se hace algun cambio\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({//esto se hace porque necesito actualizarla fecha cuando se hace algun cambio\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault()\r\n        const momentStart=moment(start)\r\n        const momentEnd=moment(end)\r\n        \r\n        if( momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('error','La fecha fin tiene que ser mayor a la de inicio','error')\r\n                        //  title           mensaje                                        imag\r\n        }\r\n        if(title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n        //TODO: realizar la grabacion en la bd\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className='modal'\r\n          overlayClassName='modal-fondo'\r\n        >\r\n            <h1>{(activeEvent) ? 'Editar Evento' : 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                    onChange={handleStartDateChange}\r\n                    value={dateStart}\r\n                    className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                    onChange={handleEndDateChange}\r\n                    value={dateEnd}\r\n                    minDate= {dateStart}\r\n                    className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n        )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleClickNew= () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return (\r\n        <button\r\n            className='btn btn-primary fab'\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {   eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleDelete=  () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={handleDelete}\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar Evento </span>            \r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport 'moment/locale/es'\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n    const {uid} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    //TODO: leer del store los eventos\r\n    const {events,activeEvent} = useSelector(state => state.calendar)\r\n    \r\n    useEffect(() => {\r\n        dispatch( eventStartLoading())        \r\n    }, [dispatch])\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e)\r\n        \r\n        dispatch(uiOpenModal())\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n        \r\n    }\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView',e)\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected) => {\r\n        \r\n        const style={\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color:'white',   \r\n        }\r\n        return {style};\r\n    }\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}//Este evento me permite que cuando hago click se dispare.\r\n                onView={onViewChange}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event:CalendarEvent //mando como referencia, no loimporto como un component\r\n                    //para que se vea el hola mundo en todos lados.\r\n                }}\r\n\r\n            />\r\n            <AddNewFab />\r\n            \r\n            {\r\n                    (activeEvent)\r\n                    &&\r\n                    (<DeleteEventFab />)                         \r\n             }\r\n\r\n                \r\n            \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n   \r\n// Esto es para proteger las rutas, esta bueno, porque si haces un auth de un login,\r\n//si no podes llegar a confirmar que estas logeado, no te deja ingresar.\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n                (isAuthenticated)\r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to='/login' />)\r\n            )     \r\n            }\r\n        />\r\n\r\n        \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component : Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n// Esto es para proteger las rutas, esta bueno, porque si haces un auth de un login,\r\n//si no podes llegar a confirmar que estas logeado, no te deja ingresar.\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) =>(\r\n                (!isAuthenticated)\r\n                ? (<Component {...props}/>)\r\n                : (<Redirect to='/' />)\r\n            )     \r\n            }\r\n        />\r\n\r\n        \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    \r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n  \r\n  export const AppRouter =() => {\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n      dispatch(startChecking())\r\n    }, [dispatch])\r\n    if(checking){\r\n      return (<h5>Espere...</h5>);\r\n    }\r\n    return (\r\n      <Router>\r\n        <div>\r\n          \r\n            <Switch>\r\n                <PublicRoute \r\n                  exact \r\n                  path='/login' \r\n                  component={LoginScreen}\r\n                  isAuthenticated= { !!uid } //!! negacion de un string, pasa a booleano\r\n                />\r\n                <PrivateRoute \r\n                  exact \r\n                  path='/' \r\n                  component={CalendarScreen} \r\n                  isAuthenticated= { !!uid }\r\n                />\r\n                <Redirect to='/' />\r\n            </Switch>\r\n      </div>\r\n    </Router>   \r\n    )}    \r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport { CalendarApp } from './CalendarApp'\r\nimport './styles.css'\r\n\r\nReactDom.render(\r\n    <CalendarApp />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}